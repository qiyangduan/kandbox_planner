# Generated by Django 3.0.5 on 2020-05-05 19:24

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('game_code', models.CharField(max_length=450, primary_key=True, serialize=False)),
                ('game_based_on', models.CharField(blank=True, max_length=1000, null=True)),
                ('game_start_date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('game_finish_date', models.DateTimeField(blank=True, null=True)),
                ('planner_code', models.CharField(blank=True, max_length=250, null=True)),
                ('game_config', models.CharField(blank=True, max_length=4000, null=True)),
                ('data_start_day', models.CharField(blank=True, max_length=250, null=True)),
                ('data_end_day', models.CharField(blank=True, max_length=250, null=True)),
                ('game_status', models.CharField(blank=True, max_length=1000, null=True)),
                ('error_message', models.CharField(blank=True, max_length=4000, null=True)),
                ('game_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('game_description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('job_code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('job_type', models.CharField(blank=True, max_length=250, null=True)),
                ('planning_status', models.CharField(blank=True, max_length=10, null=True, verbose_name='Status')),
                ('active', models.IntegerField(blank=True, default=1, null=True)),
                ('scheduled_related_worker_code', models.CharField(blank=True, max_length=1000, null=True)),
                ('scheduled_start_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Planned Start')),
                ('scheduled_duration_minutes', models.FloatField(blank=True, null=True, verbose_name='Duration')),
                ('scheduled_share_status', models.CharField(blank=True, max_length=10, null=True)),
                ('requested_start_datetime', models.DateTimeField(verbose_name='Requested Start')),
                ('requested_duration_minutes', models.FloatField()),
                ('location_code', models.CharField(blank=True, max_length=250, null=True)),
                ('geo_longitude', models.FloatField()),
                ('geo_latitude', models.FloatField()),
                ('requested_min_level', models.IntegerField(blank=True, null=True)),
                ('requested_skills', models.CharField(blank=True, max_length=4000, null=True)),
                ('mandatory_day_flag', models.IntegerField(blank=True, null=True)),
                ('preferred_day_flag', models.IntegerField(blank=True, null=True)),
                ('conflict_level', models.IntegerField(blank=True, default=0, null=True)),
                ('mandatory_day_minmax_flag', models.IntegerField(blank=True, null=True)),
                ('preferred_day_minmax_flag', models.IntegerField(blank=True, null=True)),
                ('requested_start_min_day', models.IntegerField(blank=True, null=True)),
                ('requested_start_max_day', models.IntegerField(blank=True, null=True)),
                ('mandatory_minutes_minmax_flag', models.IntegerField(blank=True, null=True)),
                ('preferred_minutes_minmax_flag', models.IntegerField(blank=True, null=True)),
                ('requested_start_min_minutes', models.IntegerField(blank=True, null=True)),
                ('requested_start_max_minutes', models.IntegerField(blank=True, null=True)),
                ('requested_week_days_flag', models.IntegerField(blank=True, null=True)),
                ('requested_week_days', models.CharField(blank=True, max_length=100, null=True)),
                ('actual_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('actual_duration_minutes', models.FloatField(blank=True, null=True)),
                ('scheduled_travel_minutes_before', models.FloatField(blank=True, null=True)),
                ('scheduled_travel_minutes_after', models.FloatField(blank=True, null=True)),
                ('scheduled_travel_prev_code', models.CharField(blank=True, max_length=250, null=True)),
                ('scheduled_travel_next_code', models.CharField(blank=True, max_length=250, null=True)),
                ('last_update_by', models.CharField(blank=True, max_length=250, null=True)),
                ('last_update_game_code', models.CharField(blank=True, max_length=250, null=True)),
                ('effective_from_date', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
            ],
            options={
                'verbose_name': 'Current_Visit',
                'verbose_name_plural': 'Visits',
            },
        ),
        migrations.CreateModel(
            name='JobChangeHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_code', models.CharField(max_length=250, verbose_name='Visit')),
                ('job_type', models.CharField(blank=True, max_length=250, null=True, verbose_name='Type Info')),
                ('planning_status', models.CharField(blank=True, max_length=10, null=True, verbose_name='Status')),
                ('planner_code', models.CharField(default='orig', max_length=250, verbose_name='Planner')),
                ('game_code', models.CharField(max_length=450, verbose_name='Batch')),
                ('planning_note', models.CharField(blank=True, max_length=1000, null=True)),
                ('geo_longitude', models.FloatField(null=True)),
                ('geo_latitude', models.FloatField(null=True)),
                ('scheduled_worker_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='Planned Tech')),
                ('scheduled_related_worker_code', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Secondary Tech')),
                ('scheduled_start_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Planned Start')),
                ('scheduled_duration_minutes', models.FloatField(null=True, verbose_name='Duration')),
                ('scheduled_share_status', models.CharField(blank=True, max_length=10, null=True)),
                ('scheduled_travel_minutes_before', models.FloatField(blank=True, null=True)),
                ('scheduled_travel_prev_code', models.CharField(blank=True, max_length=250, null=True)),
                ('operation', models.CharField(blank=True, default='U', max_length=10, null=True)),
                ('effective_from_date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
            ],
            options={
                'verbose_name': 'Visit Change',
                'verbose_name_plural': 'Changed Visits',
                'db_table': 'kpdata_job_change_history',
            },
        ),
        migrations.CreateModel(
            name='JobStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planner_code', models.CharField(default='orig', max_length=250, verbose_name='Planner')),
                ('game_code', models.CharField(max_length=450, verbose_name='Batch')),
                ('job_code', models.CharField(max_length=250, verbose_name='Visit')),
                ('job_type', models.CharField(blank=True, max_length=250, null=True, verbose_name='Type Info')),
                ('requested_skills', models.CharField(blank=True, max_length=4000, null=True)),
                ('planning_status', models.CharField(blank=True, max_length=10, null=True, verbose_name='Status')),
                ('scheduled_worker_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='Scheduled Worker')),
                ('scheduled_related_worker_code', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Secondary Tech')),
                ('scheduled_start_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Planned Start')),
                ('scheduled_duration_minutes', models.FloatField(null=True, verbose_name='Duration')),
                ('scheduled_travel_minutes_before', models.FloatField(blank=True, null=True)),
                ('scheduled_travel_minutes_after', models.FloatField(blank=True, null=True)),
                ('scheduled_travel_prev_code', models.CharField(blank=True, max_length=250, null=True)),
                ('scheduled_travel_next_code', models.CharField(blank=True, max_length=250, null=True)),
                ('conflict_level', models.IntegerField(blank=True, default=1, null=True)),
                ('scheduled_share_status', models.CharField(blank=True, max_length=10, null=True)),
                ('requested_start_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Requested Start')),
                ('requested_duration_minutes', models.FloatField(blank=True, null=True)),
                ('requested_worker_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='Requested Worker')),
                ('location_code', models.CharField(blank=True, max_length=250, null=True)),
                ('geo_longitude', models.FloatField(blank=True, null=True)),
                ('geo_latitude', models.FloatField(blank=True, null=True)),
                ('changed_flag', models.IntegerField(blank=True, default=0, null=True)),
                ('error_message', models.CharField(blank=True, max_length=3950, null=True)),
                ('effective_from_date', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
                ('effective_to_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Batch_Visit',
                'verbose_name_plural': 'Visit Batches',
            },
        ),
        migrations.CreateModel(
            name='LocationJobHistoryFeatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_code', models.CharField(max_length=250)),
                ('job_historical_worker_service_dict', models.CharField(blank=True, max_length=60000, null=True)),
                ('job_count', models.IntegerField(blank=True, null=True)),
                ('list_requested_worker_code', models.CharField(blank=True, max_length=4000, null=True)),
                ('avg_actual_start_minutes', models.FloatField(null=True)),
                ('avg_actual_duration_minutes', models.FloatField(null=True)),
                ('avg_days_delay', models.FloatField(null=True)),
                ('stddev_days_delay', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'kpdata_location_job_history_features',
            },
        ),
        migrations.CreateModel(
            name='LocationWorkerAffinityFeatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_code', models.CharField(max_length=250)),
                ('worker_code', models.CharField(max_length=250)),
                ('job_count', models.IntegerField(blank=True, null=True)),
                ('total_duration_minutes', models.IntegerField(blank=True, null=True)),
                ('location_2_home_distance', models.FloatField(blank=True, null=True)),
                ('location_2_working_gmm_distance', models.FloatField(blank=True, null=True)),
                ('affinity_score', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'kpdata_location_worker_affinity_features',
            },
        ),
        migrations.CreateModel(
            name='PlannerParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planner_code', models.CharField(max_length=250)),
                ('param_name', models.CharField(max_length=250)),
                ('mutable_flag', models.IntegerField(default=0)),
                ('param_value', models.CharField(blank=True, max_length=4000, null=True)),
            ],
            options={
                'db_table': 'kpdata_planner_parameter',
            },
        ),
        migrations.CreateModel(
            name='PlannerStatisticalFeaturesPerDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_start_day', models.CharField(max_length=250)),
                ('planner_code', models.CharField(max_length=250)),
                ('mean_on_site_service_time_ratio', models.FloatField(null=True)),
                ('sum_total_travel_minute', models.FloatField(null=True)),
                ('sum_total_service_minute', models.FloatField(null=True)),
                ('sum_total_on_duty_minute', models.FloatField(null=True)),
                ('total_job_count', models.IntegerField(blank=True, null=True)),
                ('total_unplanned_job_count', models.IntegerField(blank=True, null=True)),
                ('total_inplanning_job_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'kpdata_stats_features_per_day',
            },
        ),
        migrations.CreateModel(
            name='PlannerStatisticalFeaturesPerWorker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_worker_code', models.CharField(max_length=250)),
                ('planner_code', models.CharField(max_length=250)),
                ('mean_on_site_service_time_ratio', models.FloatField(null=True)),
                ('sum_total_travel_minute', models.FloatField(null=True)),
                ('sum_total_service_minute', models.FloatField(null=True)),
                ('sum_total_on_duty_minute', models.FloatField(null=True)),
                ('total_job_count', models.IntegerField(blank=True, null=True)),
                ('total_unplanned_job_count', models.IntegerField(blank=True, null=True)),
                ('total_inplanning_job_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'kpdata_stats_features_per_worker',
            },
        ),
        migrations.CreateModel(
            name='RLPlannerParameter',
            fields=[
                ('planner_code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('planner_env_class', models.CharField(max_length=250)),
                ('planner_agent_class', models.CharField(max_length=250)),
                ('allow_overtime', models.BooleanField()),
                ('nbr_of_observed_workers', models.IntegerField()),
                ('nbr_of_days_planning_window', models.IntegerField()),
                ('data_start_day', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'kpdata_rl_planner_parameter',
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('worker_code', models.CharField(max_length=250, primary_key=True, serialize=False, verbose_name='Worker Code')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('geo_longitude', models.FloatField(null=True)),
                ('geo_latitude', models.FloatField(null=True)),
                ('active', models.IntegerField(blank=True, default=1, null=True)),
                ('level', models.IntegerField(blank=True, default=1, null=True)),
                ('skills', models.CharField(blank=True, max_length=4000, null=True)),
                ('max_conflict_level', models.IntegerField(blank=True, default=1, null=True)),
                ('weekly_working_minutes', models.CharField(blank=True, max_length=950, null=True)),
                ('weekly_max_working_minutes', models.FloatField(blank=True, null=True)),
                ('lunch_break_minutes', models.FloatField(blank=True, null=True)),
                ('served_location_gmm', models.CharField(blank=True, max_length=2000, null=True)),
                ('last_update_by', models.CharField(blank=True, max_length=250, null=True)),
                ('last_update_game_code', models.CharField(blank=True, max_length=250, null=True)),
                ('effective_from_date', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
            ],
            options={
                'verbose_name': 'Current_Tech',
                'verbose_name_plural': 'Techs',
            },
        ),
        migrations.CreateModel(
            name='WorkerAbsence',
            fields=[
                ('absence_code', models.CharField(max_length=250, primary_key=True, serialize=False)),
                ('absence_type', models.CharField(blank=True, max_length=250, null=True)),
                ('worker_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='Worker Code')),
                ('start_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('geo_longitude', models.FloatField(blank=True, null=True)),
                ('geo_latitude', models.FloatField(blank=True, null=True)),
                ('last_update_by', models.CharField(blank=True, max_length=250, null=True)),
                ('last_update_game_code', models.CharField(blank=True, max_length=250, null=True)),
                ('effective_from_date', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
            ],
            options={
                'verbose_name': 'Current_Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='WorkerAbsenceStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_code', models.CharField(max_length=450)),
                ('absence_code', models.CharField(max_length=250)),
                ('absence_type', models.CharField(blank=True, max_length=250, null=True)),
                ('worker_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='Service Area')),
                ('start_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('geo_longitude', models.FloatField(blank=True, null=True)),
                ('geo_latitude', models.FloatField(blank=True, null=True)),
                ('last_update_by', models.CharField(blank=True, max_length=250, null=True)),
                ('last_update_game_code', models.CharField(blank=True, max_length=250, null=True)),
                ('effective_from_date', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
            ],
            options={
                'verbose_name': 'Batch_Event',
                'verbose_name_plural': 'Event Histories',
            },
        ),
        migrations.CreateModel(
            name='WorkerSkill',
            fields=[
                ('skill_code', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('desc', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WorkerStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worker_code', models.CharField(max_length=250, verbose_name='Service Area')),
                ('game_code', models.CharField(max_length=450)),
                ('planner_code', models.CharField(max_length=450)),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, default=1, null=True)),
                ('skills', models.CharField(blank=True, max_length=4000, null=True)),
                ('geo_longitude', models.FloatField(null=True)),
                ('geo_latitude', models.FloatField(null=True)),
                ('max_conflict_level', models.IntegerField(blank=True, default=1, null=True)),
                ('weekly_working_minutes', models.CharField(blank=True, max_length=950, null=True)),
                ('weekly_max_working_minutes', models.FloatField(blank=True, null=True)),
                ('lunch_break_minutes', models.FloatField(blank=True, null=True)),
                ('last_update_by', models.CharField(blank=True, max_length=250, null=True)),
                ('effective_from_date', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
            ],
            options={
                'verbose_name': 'Batch_Tech',
                'verbose_name_plural': 'Tech Batches',
            },
        ),
        migrations.CreateModel(
            name='WorkerLevel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('worker_skill_levels', models.ManyToManyField(to='kpdata.WorkerSkill')),
            ],
        ),
        migrations.CreateModel(
            name='WorkerAbsenceChanged',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_code', models.CharField(max_length=450)),
                ('start_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('approval_status_code', models.CharField(blank=True, max_length=250, null=True)),
                ('last_update_by', models.CharField(blank=True, max_length=250, null=True)),
                ('last_update_game_code', models.CharField(blank=True, max_length=250, null=True)),
                ('effective_from_date', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
                ('worker_code', models.ForeignKey(blank=True, db_column='worker_code', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='absence_worker', to='kpdata.Worker')),
            ],
            options={
                'verbose_name': 'Batch_Event',
                'verbose_name_plural': 'Batch Events',
            },
        ),
        migrations.AddConstraint(
            model_name='plannerparameter',
            constraint=models.UniqueConstraint(fields=('planner_code', 'param_name'), name='unique_parameter'),
        ),
        migrations.AddField(
            model_name='job',
            name='actual_worker_code',
            field=models.ForeignKey(blank=True, db_column='actual_worker_code', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='actual_worker', to='kpdata.Worker'),
        ),
        migrations.AddField(
            model_name='job',
            name='requested_worker_code',
            field=models.ForeignKey(db_column='requested_worker_code', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='requested_worker', to='kpdata.Worker', verbose_name='Requested Worker'),
        ),
        migrations.AddField(
            model_name='job',
            name='scheduled_worker_code',
            field=models.ForeignKey(blank=True, db_column='scheduled_worker_code', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='scheduled_worker', to='kpdata.Worker', verbose_name='Scheduled Worker'),
        ),
        migrations.CreateModel(
            name='GameChart',
            fields=[
            ],
            options={
                'verbose_name': 'Visit_Chart',
                'verbose_name_plural': 'Visit Chart',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kpdata.game',),
        ),
        migrations.CreateModel(
            name='VueGameChart',
            fields=[
            ],
            options={
                'verbose_name': 'Vue_Chart',
                'verbose_name_plural': 'Vue Visit Chart',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('kpdata.game',),
        ),
    ]
